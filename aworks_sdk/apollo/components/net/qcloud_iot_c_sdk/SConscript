#!/usr/bin/python
# -*- coding: utf-8 -*-

from config_build_common import build_common_config
from config_aw_base import aw_base_config
from config_lwip import aw_lwip_config
import config_lwip
import os

#env = DefaultEnvironment()
#env['CFLAGS'] += r' -D LWIP_PROVIDE_ERRNO'

cur_build_path = Dir('.', False)
org_build_path = str(cur_build_path.srcnode())

# 构建qcloud路径
# 得出qcloud源码绝对路径
qcloud_src_path = os.path.join(
    build_common_config.AWORKS_ROOT, '3rdparty', 'net', 'qcloud_iot_c_sdk')
# 由qcloud源码路径推算出LWIP将要安装的路径
qcloud_src_rel_apollo_dir = cal_relative_dir(
    build_common_config.AWORKS_ROOT, qcloud_src_path)
qcloud_src_install_path = os.path.join(
    build_common_config.AW_SDK_INSTALL_PATH, 'apollo', qcloud_src_rel_apollo_dir)
qcloud_rel_dir = cal_relative_dir(org_build_path, qcloud_src_path)


COMPILER_TOOLS = ARGUMENTS.get('COMPILER_TOOLS')
if COMPILER_TOOLS == 'gcc' :

    SOURCE = Glob('platform/*.c')
    SOURCE.append(Glob(build_common_config.AWORKS_ROOT + '3rdparty/net/qcloud_iot_c_sdk/sdk_src/*.c'))

    INCLUDE = list(build_common_config.AW_COMMON_INCLUDE)
    INCLUDE.append(aw_lwip_config.LWIP_INCLUDE)
    INCLUDE.append(os.path.join(build_common_config.AW_SDK_INSTALL_PATH, 'include'))
    INCLUDE.append(build_common_config.AWORKS_ROOT + 'components/base/include')
    INCLUDE.append(build_common_config.AWORKS_ROOT + 'components/net/core/include')

    INCLUDE.append(build_common_config.AWORKS_ROOT + 'components/net/mbedtls-2.24.0-adapter/include')
    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/mbedtls-2.24.0/include')
    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/mbedtls-2.24.0/library')
    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/mbedtls-2.24.0/configs')

    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/qcloud_iot_c_sdk/include')
    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/qcloud_iot_c_sdk/include/exports')
    INCLUDE.append(build_common_config.AWORKS_ROOT + '3rdparty/net/qcloud_iot_c_sdk/sdk_src/internal_inc')

    INCLUDE.append(build_common_config.AWORKS_ROOT + 'components/net/qcloud_iot_c_sdk/include')

    #INCLUDE.append(qcloud_src_path + 'include')
    #INCLUDE.append(qcloud_src_path + 'include/exports')
    #INCLUDE.append(qcloud_src_path + 'sdk_src/internal_inc')

    lib_files = Library('qcloud', SOURCE, CPPPATH=INCLUDE)

    
else :
    lib_files = None
    
Return('lib_files')
